{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/Feedback/Feedback.module.scss","components/Section/Section.module.scss","components/Notification/Notification.module.scss","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Feedback","className","s","container","this","props","options","map","btn","button","type","onClick","e","React","Component","Statistics","wrap","text","good","neutral","bad","total","percentage","Section","title","children","section","Notification","message","App","state","Good","Neutral","Bad","handleIncrement","value","target","textContent","setState","prevState","countTotalFeedback","Object","values","reduce","acc","val","countPositiveFeedbackPercentage","Math","trunc","btnOptions","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,2B,gBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,KAAO,6B,qLCEnBC,E,4JAKJ,WAAU,IAAD,OACP,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACGC,KAAKC,MAAMC,QAAQC,KAAI,SAAAC,GACtB,OACE,wBACEP,UAAWC,IAAEO,OAEbC,KAAK,SACLC,QAAS,SAAAC,GACP,EAAKP,MAAMM,QAAQC,IALvB,SAQGJ,GANIA,Y,GAZIK,IAAMC,WA2Bdd,I,gBC3BTe,E,4JASJ,WACE,OACE,sBAAKd,UAAWC,IAAEc,KAAlB,UACE,oBAAGf,UAAWC,IAAEe,KAAhB,kBAA4Bb,KAAKC,MAAMa,QACvC,oBAAGjB,UAAWC,IAAEe,KAAhB,qBAA+Bb,KAAKC,MAAMc,WAC1C,oBAAGlB,UAAWC,IAAEe,KAAhB,iBAA2Bb,KAAKC,MAAMe,OACrChB,KAAKC,MAAMgB,OAAS,GACnB,oBAAGpB,UAAWC,IAAEe,KAAhB,mBAA6Bb,KAAKC,MAAMgB,SAEzCjB,KAAKC,MAAMiB,WAAa,GAAK,iCAAOlB,KAAKC,MAAMiB,WAAlB,c,GAlBbT,IAAMC,WAuBhBC,I,gBCvBA,SAASQ,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASxB,UAAWC,IAAEwB,QAAtB,UACE,oBAAIzB,UAAWC,IAAEsB,MAAjB,SAAyBA,IACxBC,K,qBCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAG3B,UAAWC,IAAEe,KAAhB,SAAuBW,I,UCG1BC,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPC,gBAAkB,SAAAtB,GAChB,IAAMuB,EAAQvB,EAAEwB,OAAOC,YACvB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJJ,EAAQI,EAAUJ,GAAS,MAGhC,EAAKK,sB,EAEPA,mBAAqB,WAEnB,OADkBC,OAAOC,OAAO,EAAKZ,OACpBa,QAAO,SAACC,EAAKC,GAE5B,OADAD,GAAOC,M,EAKXC,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKlB,MAAMC,KAAO,EAAKS,qBAAwB,M,4CAGpE,WACE,IAAMS,EAAaR,OAAOS,KAAK9C,KAAK0B,OACpC,OACE,gCACE,cAACP,EAAD,CAASC,MAAO,6BAAhB,SACE,cAAC,EAAD,CAAUlB,QAAS2C,EAAYtC,QAASP,KAAK8B,oBAE/C,cAACX,EAAD,CAASC,MAAO,aAAhB,SACGpB,KAAKoC,qBAAuB,EAC3B,cAAC,EAAD,CACEtB,KAAMd,KAAK0B,MAAMC,KACjBZ,QAASf,KAAK0B,MAAME,QACpBZ,IAAKhB,KAAK0B,MAAMG,IAChBZ,MAAOjB,KAAKoC,qBACZlB,WAAYlB,KAAK0C,oCAGnB,cAACnB,EAAD,CAAcC,QAAS,kC,GA5CjBf,IAAMC,WAoDTe,ICtDfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3949b435.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Statistics_wrap__1lmm0\",\"text\":\"Statistics_text__1NZPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__32CHx\",\"button\":\"Feedback_button__3Zdr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2mYr1\",\"title\":\"Section_title__ikPIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2xbX0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Feedback.module.scss';\nclass Feedback extends React.Component {\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n  };\n\n  render() {\n    return (\n      <div className={s.container}>\n        {this.props.options.map(btn => {\n          return (\n            <button\n              className={s.button}\n              key={btn}\n              type=\"button\"\n              onClick={e => {\n                this.props.onClick(e);\n              }}\n            >\n              {btn}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.scss';\nclass Statistics extends React.Component {\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number.isRequired,\n    percentage: PropTypes.number.isRequired,\n  };\n\n  render() {\n    return (\n      <div className={s.wrap}>\n        <p className={s.text}>Good:{this.props.good}</p>\n        <p className={s.text}>Neutral:{this.props.neutral}</p>\n        <p className={s.text}>Bad:{this.props.bad}</p>\n        {this.props.total >= 1 && (\n          <p className={s.text}>Total:{this.props.total}</p>\n        )}\n        {this.props.percentage > 0 && <span>{this.props.percentage}%</span>}\n      </div>\n    );\n  }\n}\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.scss';\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.scss';\nexport default function Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React from 'react';\nimport Feedback from './components/Feedback/Feedback';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0,\n  };\n  handleIncrement = e => {\n    const value = e.target.textContent;\n    this.setState(prevState => {\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n    this.countTotalFeedback();\n  };\n  countTotalFeedback = () => {\n    const valuesArr = Object.values(this.state);\n    return valuesArr.reduce((acc, val) => {\n      acc += val;\n      return acc;\n    });\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.trunc((this.state.Good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const btnOptions = Object.keys(this.state);\n    return (\n      <div>\n        <Section title={'Please leave your feedback'}>\n          <Feedback options={btnOptions} onClick={this.handleIncrement} />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.Good}\n              neutral={this.state.Neutral}\n              bad={this.state.Bad}\n              total={this.countTotalFeedback()}\n              percentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'There is no feedback'} />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}